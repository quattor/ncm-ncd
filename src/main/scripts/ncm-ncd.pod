package ncm-ncd;

=pod

=head1 NAME

ncm-ncd - Node Configuration Dispatcher
      of the NCM (Node Configuration Management) subsystem

      quattor toolsuite http://quattor.org

=head1 SYNOPSIS

ncm-ncd --configure   [options] [<component1> [<component2>] ...]
ncm-ncd --unconfigure [options] component

(See ncm-ncd --help for full list of options with default values.)

=head1 DESCRIPTION

The B<ncm-ncd> is the front end for invoking NCM configuration
components. The B<ncm-ncd> is called with a list of components to be
invoked as an argument. Based on this list, the B<ncd> looks up the
inter-component dependencies, orders the components, and invokes each
component sequentially.

If no component is specified, the B<ncd> will invoke all
components which are marked as active in the node configuration
profile. These are considered to be the 'default' components to run.

The B<ncd> can be executed manually, via B<cron>, or via the
B<cdispd>.

If a dependency is not fulfilled, the B<ncd> exits with an
appropriate error message and return status.

In case of deinstallation of a component using B<--unconfigure>,
the B<ncd> is to be called with the component's name as a
parameter.


=head1 OPTIONS

=over 4

=item --list

Does nothing but list all found components, in the following format:

name - active? - installed?

=item --configure

Run the 'configure' method for <component1 component2 ...> (default option).
For running configure on all components, use --configure --all.

=item --all

See above. Run --configure --all to run configure on all components.

=item --skip <component>

Skip one component (only to be used with --all)

=item --unconfigure

Run the 'unconfigure' method for <component>. Only one component can
be unconfigured at a time.

=item --logdir <dir>

Directory where to place ncm-ncd and component log files

=item --retries <n>

Try 'n' times if locked (another ncm-ncd instance is running).

=item --state <dir>

Directory in which to find state files. On conclusion of any component
configuration, if the configuration was successful then the component
file will be deleted from this state directory. If a component
produces errors, then the component file will contain the number of errors.
In other words, if a configuration is clean then there will be
no files within the state directory. If there are any problems with
the configuration, then there will be a file for the failing
components. An empty file indicates that the component has not
completed its configuration. If this option is not defined, then
no state files will be maintained.

=item --timeout <n>

Wait a maximum of 'n' seconds between retries.

=item --useprofile <profile_id>

Use <profile_id> as NVA-API configuration profile ID (default: latest)

=item --cache_root <directory>

CCM cache root directory (optional, otherwise CCM default taken)

=item --multilog

Use separate (per component) log files in log directory

=item --pre-hook

Hook to be executed before any component is run.  It receives a JSON
object with the list of components that will be executed.

To see the exact form of the input run

    ncm-ncd --configure <some-comp> --pre-hook /bin/cat

=item --post-hook

Hook to be executed after all components have run.  It receives a JSON
object via stdin with the components that succeeded, failed or had
warnings.

=item --pre-hook-timeout, --post-hook-timeout

Timeouts, in seconds, for the C<--pre-hook> and C<--post-hook>

A value of 0 means no time out.  By default they time out after 5 minutes.

=item --chroot

Chroot to the directory given as an argument.  If it's not possible to
chroot, C<ncm-ncd> will die.

=item --check-noquattor

Check if CCM updates are disabled globally via the /etc/noquattor file.
And do not run if CCM updates are globally disabled.
(If --check-noquattor is not set, ncm-ncd will ignore /etc/noquattor).

=item --history

Enable history/event tracking. (Enabled by default).

=item --force-quattor

Run even if CCM updates are globally disabled (and --check-noquattor is set).

=back

=head2 Advanced Options

Following options are advanced options (typically used for debugging and/or testing).
Use with care.

=over

=item --ignorelock

Ignore existing application lock. Use with care.

=item --forcelock

Take over application lock. Use with care.

=item --nodeps

ignore broken dependencies when invoking configure. Use with care.

missing pre/post dependencies are ignored during resolution;
and during the ordered execution of all components, failing
predependencies are not considered broken and allow the execution
of the component.

=item --ignore-errors-from-dependencies

errors from dependencies are downgraded to warnings, to make the
overall ncm-ncd run pass if a dependency fails. This option implies
'--nodeps' and '--autodeps'. Use with care.

A "dependency" is any component that is not requested/specified
 via command line (and added to list of components to process via
'--autodeps', if any).

(If you do not care about dependencies and just want to avoid errors,
you can also try to use '--nodeps --no-autodeps').

=item --autodeps

Expand missing pre/post dependencies in configure (default to true).
(Disable with --no-autodeps. Use --no-autodeps with care.)

=item --allowbrokencomps

Do not stop overall execution if 'broken' components are found, just ignore
these ('broken' components: component file missing or not instantiable). Use with care.

=item --history-instances

Enable history/event instances tracking. Use with care.

=back

=head2 Other Options

=over

=item --help

Displays a help message with all options and default settings.

=item --version

Displays application version information.

=item --verbose

Print verbose details on operations.

=item --debug <1..5>

Set the debugging level to <1..5>.

=item --facility <f>

Set the syslog facility to <f> (Eg. local1).

=item --quiet

Suppress application output to standard output.

=item --noaction

Do not actually perform operations.

=item --include <directories>

A colon-seperated list of directories to include in search path for ncm-components

=back

=head1 CONFIGURATION FILE

A configuration file can keep site-wide configuration settings. The
location of the configuration file is defined in the --cfgfile
option. A default configuration file is found in
/etc/ncm-ncd.conf

=head1 SIGNAL HANDLING

If a signal is received, the ncm-ncd will try to finish its execution
gracefully and will report an error (return status: -1), except if
it was called with the --noaction flag.

=head1 AUTHOR

${author}

=head1 MORE INFORMATION

Visit B<http://quattor.org> for more information on the quattor
toolsuite.

=cut
